{"version":3,"sources":["components/BreakComponent/BreakComponent.module.css","containers/Pomodoro.module.css","components/ClockComponent/ClockComponent.module.css","components/ClockComponent/ClockComponentBreak.module.css","assets/sounds/alarm-clock.mp3","components/InfoComponent/InfoComponent.module.css","components/BreakComponent/BreakComponent.js","components/FocusComponent/FocusComponent.js","hoc/Aux.js","components/ClockComponent/ClockComponent.js","components/SoundComponent/SoundComponent.js","components/InfoComponent/InfoComponent.js","containers/Pomodoro.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","MainDiv","Break","Pomodoro","PomodoroBreak","Circle","Clock","BtnWrapper","btn","__webpack_require__","p","Info","breakComponent","props","react_default","a","createElement","className","classes","onClick","clicked","io","breakTime","focusComponent","focusTime","aux","children","clockComponent","styles","classesBreak","Aux","displayTime","startTimer","reset","soundComponent","myRef","React","createRef","alarm","ref","src","sound","autoPlay","info","_ref","stateRunning","breakStatus","INITIAL_STATE","timer","counter","isRunning","isBreakTime","alarmSound","state","updateBreakAndFocusTime","type","value","_this","setState","newDisplayTime","displayTimeFormatter","num","newMin","String","Math","floor","newSec","length","concat","updateClock","timeNow","totalSec","parseInt","slice","newTime","clearInterval","resetAlarmState","focusSwitch","runningTimer","breakSwitch","running","setInterval","resetTimer","Object","objectSpread","this","BreakComponent","FocusComponent","ClockComponent","SoundComponent","InfoComponent","Component","App","containers_Pomodoro","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7cc49525.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"BreakComponent_Wrapper__AYvn3\",\"MainDiv\":\"BreakComponent_MainDiv__211sQ\",\"Break\":\"BreakComponent_Break__3WSm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pomodoro\":\"Pomodoro_Pomodoro__wn-w0\",\"PomodoroBreak\":\"Pomodoro_PomodoroBreak__IJfIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Circle\":\"ClockComponent_Circle__2eJDS\",\"Clock\":\"ClockComponent_Clock__3VS0z\",\"BtnWrapper\":\"ClockComponent_BtnWrapper__Kw1oE\",\"btn\":\"ClockComponent_btn__3bUCH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Circle\":\"ClockComponentBreak_Circle__3Q0yi\",\"Clock\":\"ClockComponentBreak_Clock__1xGs5\",\"BtnWrapper\":\"ClockComponentBreak_BtnWrapper__1zucC\",\"btn\":\"ClockComponentBreak_btn__1TouY\"};","module.exports = __webpack_public_path__ + \"static/media/alarm-clock.2f154994.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"InfoComponent_Info__jpup1\"};","import React from \"react\";\nimport classes from \"./BreakComponent.module.css\";\nimport { IoIosFastforward } from \"react-icons/io\";\nimport { IoIosRewind } from \"react-icons/io\";\n\nconst breakComponent = props => {\n\treturn (\n\t\t<div className={classes.Wrapper}>\n\t\t\t<div className={classes.MainDiv}>\n\t\t\t\t<p>Break Time</p>\n\t\t\t\t<div className={classes.Break}>\n\t\t\t\t\t<button onClick={() => props.clicked(\"less\", \"break\")}>\n\t\t\t\t\t\t<IoIosRewind />\n\t\t\t\t\t</button>\n\t\t\t\t\t<p>{props.breakTime}</p>\n\t\t\t\t\t<button onClick={() => props.clicked(\"more\", \"break\")}>\n\t\t\t\t\t\t<IoIosFastforward />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default breakComponent;\n","import React from \"react\";\nimport classes from \"../BreakComponent/BreakComponent.module.css\";\nimport { IoIosFastforward } from \"react-icons/io\";\nimport { IoIosRewind } from \"react-icons/io\";\n\nconst focusComponent = props => {\n\treturn (\n\t\t<div className={classes.Wrapper}>\n\t\t\t<div className={classes.MainDiv}>\n\t\t\t\t<p>Focus Time</p>\n\t\t\t\t<div className={classes.Break}>\n\t\t\t\t\t<button onClick={() => props.clicked(\"less\", \"focus\")}>\n\t\t\t\t\t\t<IoIosRewind />\n\t\t\t\t\t</button>\n\t\t\t\t\t<p>{props.focusTime}</p>\n\t\t\t\t\t<button onClick={() => props.clicked(\"more\", \"focus\")}>\n\t\t\t\t\t\t<IoIosFastforward />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default focusComponent;\n","const aux = props => props.children;\n\nexport default aux;\n","import React from \"react\";\nimport classes from \"./ClockComponent.module.css\";\nimport classesBreak from \"./ClockComponentBreak.module.css\";\nimport Aux from \"../../hoc/Aux\";\nimport { IoMdSkipForward } from \"react-icons/io\";\nimport { IoMdRepeat } from \"react-icons/io\";\n\nconst clockComponent = props => {\n\tlet styles = props.breakTime ? classesBreak : classes;\n\treturn (\n\t\t<Aux>\n\t\t\t<div className={styles.Circle}>\n\t\t\t\t<div className={styles.Clock}>\n\t\t\t\t\t<p>{props.displayTime}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={styles.BtnWrapper}>\n\t\t\t\t<button onClick={props.startTimer} className={styles.btn}>\n\t\t\t\t\t<IoMdSkipForward />\n\t\t\t\t</button>\n\t\t\t\t<button onClick={props.reset} className={styles.btn}>\n\t\t\t\t\t<IoMdRepeat />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Aux>\n\t);\n};\n\nexport default clockComponent;\n","import React from \"react\";\nimport sound from \"../../assets/sounds/alarm-clock.mp3\";\n\nconst soundComponent = props => {\n\tconst myRef = React.createRef();\n\n\tif (props.alarm) {\n\t\treturn <audio ref={myRef} src={sound} autoPlay />;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport default soundComponent;\n","import React from \"react\";\nimport classes from \"./InfoComponent.module.css\";\n\nconst info = props => {\n\tlet [stateRunning, breakStatus] = [props.stateRunning, props.breakStatus];\n\tlet info = \"Please click start button\";\n\tstateRunning\n\t\t? breakStatus\n\t\t\t? (info = \"Break Session\")\n\t\t\t: (info = \"Focus Session\")\n\t\t: (info = \"Click play/pause to start/continue your session\");\n\treturn (\n\t\t<div className={classes.Info}>\n\t\t\t<p>{info}</p>\n\t\t</div>\n\t);\n};\n\nexport default info;\n","import React, { Component } from \"react\";\nimport classes from \"./Pomodoro.module.css\";\nimport BreakComponent from \"../components/BreakComponent/BreakComponent\";\nimport FocusComponent from \"../components/FocusComponent/FocusComponent\";\nimport ClockComponent from \"../components/ClockComponent/ClockComponent\";\nimport SoundComponent from \"../components/SoundComponent/SoundComponent\";\nimport InfoComponent from \"../components/InfoComponent/InfoComponent\";\n\nconst INITIAL_STATE = {\n\tfocusTime: 25,\n\tbreakTime: 5,\n\tdisplayTime: \"25:00\",\n\ttimer: null,\n\tcounter: 0,\n\tisRunning: false,\n\tisBreakTime: false,\n\talarmSound: false\n};\n\nclass Pomodoro extends Component {\n\tstate = { ...INITIAL_STATE };\n\n\tupdateBreakAndFocusTime = (btn, type) => {\n\t\tif (!this.state.isRunning) {\n\t\t\tlet value;\n\t\t\tif (type === \"break\") {\n\t\t\t\tvalue = this.state.breakTime;\n\t\t\t\tif (btn === \"less\" && value > 1) {\n\t\t\t\t\tvalue--;\n\t\t\t\t} else if (btn === \"more\" && value < 60) {\n\t\t\t\t\tvalue++;\n\t\t\t\t}\n\t\t\t\tthis.setState({ breakTime: value });\n\t\t\t}\n\t\t\tif (type === \"focus\") {\n\t\t\t\tvalue = this.state.focusTime;\n\t\t\t\tif (btn === \"less\" && value > 1) {\n\t\t\t\t\tvalue--;\n\t\t\t\t} else if (btn === \"more\" && value < 60) {\n\t\t\t\t\tvalue++;\n\t\t\t\t}\n\t\t\t\tlet newDisplayTime = this.displayTimeFormatter(value * 60);\n\t\t\t\tthis.setState({ focusTime: value, displayTime: newDisplayTime });\n\t\t\t}\n\t\t}\n\t};\n\tdisplayTimeFormatter = num => {\n\t\tlet newMin = String(Math.floor(num / 60));\n\t\tlet newSec = String(num % 60);\n\t\tif (newMin.length === 1) {\n\t\t\tnewMin = \"0\" + newMin;\n\t\t}\n\t\tif (newSec.length === 1) {\n\t\t\tnewSec = \"0\" + newSec;\n\t\t}\n\t\treturn `${newMin}:${newSec}`;\n\t};\n\tupdateClock = () => {\n\t\tconst timeNow = this.state.displayTime;\n\t\tconst min = parseInt(timeNow.slice(0, 2));\n\t\tconst sec = parseInt(timeNow.slice(3));\n\t\tlet totalSec = min * 60 + sec;\n\t\ttotalSec--;\n\t\tconst newTime = this.displayTimeFormatter(totalSec);\n\t\tif (this.state.displayTime === \"00:00\") {\n\t\t\tclearInterval(this.state.timer);\n\t\t\tthis.setState({ alarmSound: true });\n\t\t\tthis.resetAlarmState();\n\n\t\t\tif (!this.state.isBreakTime) {\n\t\t\t\tlet breakSwitch = this.displayTimeFormatter(this.state.breakTime * 60);\n\t\t\t\tthis.setState({\n\t\t\t\t\tdisplayTime: breakSwitch,\n\t\t\t\t\tisBreakTime: !this.state.isBreakTime,\n\t\t\t\t\tisRunning: !this.state.isRunning\n\t\t\t\t});\n\t\t\t\tthis.runningTimer();\n\t\t\t} else {\n\t\t\t\tlet focusSwitch = this.displayTimeFormatter(this.state.focusTime * 60);\n\t\t\t\tthis.setState({\n\t\t\t\t\tdisplayTime: focusSwitch,\n\t\t\t\t\tisBreakTime: !this.state.isBreakTime,\n\t\t\t\t\tisRunning: !this.state.isRunning\n\t\t\t\t});\n\t\t\t\tthis.runningTimer();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tdisplayTime: newTime\n\t\t\t});\n\t\t}\n\t};\n\trunningTimer = () => {\n\t\tconst running = !this.state.isRunning;\n\t\tthis.setState({ isRunning: running });\n\t\tif (running) {\n\t\t\tlet timer = setInterval(() => this.updateClock(), 1000);\n\t\t\tthis.setState({ timer: timer });\n\t\t} else {\n\t\t\tclearInterval(this.state.timer);\n\t\t}\n\t};\n\tresetTimer = () => {\n\t\tclearInterval(this.state.timer);\n\t\tthis.setState({ ...INITIAL_STATE });\n\t};\n\tresetAlarmState = () => {\n\t\tif (this.state.alarmSound) {\n\t\t\tsetInterval(() => {\n\t\t\t\tthis.setState({ alarmSound: false });\n\t\t\t}, 10000);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\tthis.state.isBreakTime ? classes.PomodoroBreak : classes.Pomodoro\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<header>Pomodoro Clock</header>\n\t\t\t\t<div>\n\t\t\t\t\t<BreakComponent\n\t\t\t\t\t\tclicked={this.updateBreakAndFocusTime}\n\t\t\t\t\t\tbreakTime={this.state.breakTime}\n\t\t\t\t\t\tbreakStatus={this.state.isBreakTime}\n\t\t\t\t\t/>\n\t\t\t\t\t<FocusComponent\n\t\t\t\t\t\tclicked={this.updateBreakAndFocusTime}\n\t\t\t\t\t\tfocusTime={this.state.focusTime}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ClockComponent\n\t\t\t\t\tstartTimer={this.runningTimer}\n\t\t\t\t\tdisplayTime={this.state.displayTime}\n\t\t\t\t\treset={this.resetTimer}\n\t\t\t\t\tbreakTime={this.state.isBreakTime}\n\t\t\t\t/>\n\t\t\t\t<SoundComponent alarm={this.state.alarmSound} />\n\t\t\t\t<InfoComponent\n\t\t\t\t\tbreakStatus={this.state.isBreakTime}\n\t\t\t\t\tstateRunning={this.state.isRunning}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Pomodoro;\n","import React, { Component } from \"react\";\nimport Pomodoro from \"./containers/Pomodoro\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Pomodoro />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}